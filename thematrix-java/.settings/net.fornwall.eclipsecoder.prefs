eclipse.preferences.version=1
problemStatement=TheMatrix.html
problemStatementXml=<?xml version\="1.0" encoding\="UTF-8"?>\n<java version\="1.7.0_25" class\="java.beans.XMLDecoder">\n <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement">\n  <void property\="className">\n   <string>TheMatrix</string>\n  </void>\n  <void property\="contestName">\n   <string>Single Round Match 610 - 550 points</string>\n  </void>\n  <void property\="htmlDescription">\n   <string>&lt;html&gt;&lt;head&gt;&lt;title&gt;TheMatrix&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor\=&quot;\#000000&quot; text\=&quot;\#ffffff&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Problem Statement&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;p&gt;Have you ever had a dream, that you were so sure was real? What if you were unable to wake from that dream? How would you know the difference between the dream world and the real world?&lt;/p&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;\n\n&lt;p&gt;To answer this complex puzzle, one of the questions that must be answered is to find out whether the world that you live in can be represented by a &lt;i&gt;chess matrix&lt;/i&gt;.&lt;/p&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;\n\n&lt;p&gt;Cells of a matrix are called adjacent if they share an edge.\nA matrix of zeroes and ones is called a chess matrix if there are no two adjacent cells that share the same value.\nHence, in a chess matrix the zeroes and ones have to alternate in the same way the colors alternate on a chessboard\:&lt;/p&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;\n\n&lt;p&gt;&lt;img src\=&quot;http\://i60.tinypic.com/2n8vclz.png&quot;&gt;&lt;/img&gt;&lt;/p&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;\n\n&lt;p&gt;You are given a String[] &lt;b&gt;board&lt;/b&gt; that represents a rectangular grid of cells, with a 0 or a 1 in each cell.\nEach character of each element of &lt;b&gt;board&lt;/b&gt; will be either &apos;0&apos; or &apos;1&apos;.\nIn this grid we selected some rectangular subgrid that is a chess matrix.\nReturn the largest possible area of the selected subgrid.&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Definition&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Class\:&lt;/td&gt;&lt;td&gt;TheMatrix&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method\:&lt;/td&gt;&lt;td&gt;MaxArea&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Parameters\:&lt;/td&gt;&lt;td&gt;String[]&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Returns\:&lt;/td&gt;&lt;td&gt;int&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method signature\:&lt;/td&gt;&lt;td&gt;int MaxArea(String[] board)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;(be sure your method is public)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Limits&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Time limit (s)\:&lt;/td&gt;&lt;td&gt;2.000&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Memory limit (MB)\:&lt;/td&gt;&lt;td&gt;256&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Constraints&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;board&lt;/b&gt; will contain between 1 and 100 elements, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each element of the &lt;b&gt;board&lt;/b&gt; is a string containing between 1 and 100 characters, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;All elements of &lt;b&gt;board&lt;/b&gt; will have the same length.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each character of each element of &lt;b&gt;board&lt;/b&gt; will be either &apos;0&apos; or &apos;1&apos;.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Examples&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;0)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;1&amp;quot;, \n &amp;quot;0&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;The entire board is a chess matrix.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;1)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;0000&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;The largest possible chess matrix here is just a single cell.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;2)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;01&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;Again, the entire board is a chess matrix.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;3)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;001&amp;quot;,\n &amp;quot;000&amp;quot;,\n &amp;quot;100&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;Each rectangular subgrid is determined by a contiguous range of rows and a contiguous range of columns. The four corners of this grid do not form a valid rectangular subgrid.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;4)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;0&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;5)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;101&amp;quot;, \n &amp;quot;010&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 6&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;6)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;101&amp;quot;, \n &amp;quot;011&amp;quot;, \n &amp;quot;101&amp;quot;, \n &amp;quot;010&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 8&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;7)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;11001110011000110001111001001110110011010110001011&amp;quot;, \n &amp;quot;10100100010111111011111001011110101111010011100001&amp;quot;, \n &amp;quot;11101111001110100110010101101100011100101000010001&amp;quot;, \n &amp;quot;01000010001010101100010011111000100100110111111000&amp;quot;, \n &amp;quot;10110100000101100000111000100001011101111101010010&amp;quot;, \n &amp;quot;00111010000011100001110110010011010110010011100100&amp;quot;, \n &amp;quot;01100001111101001101001101100001111000111001101010&amp;quot;, \n &amp;quot;11010000000011011010100010000000111011001001100101&amp;quot;, \n &amp;quot;10100000000100010100100011010100110110110001000001&amp;quot;, \n &amp;quot;01101010101100001100000110100110100000010100100010&amp;quot;, \n &amp;quot;11010000001110111111011010011110001101100011100010&amp;quot;, \n &amp;quot;11101111000000011010011100100001100011111111110111&amp;quot;, \n &amp;quot;11000001101100100011000110111010011001010100000001&amp;quot;, \n &amp;quot;00100001111001010000101101100010000001100100001000&amp;quot;, \n &amp;quot;01001110110111101011010000111111101011000110010111&amp;quot;, \n &amp;quot;01001010000111111001100000100010101100100101010100&amp;quot;, \n &amp;quot;11111101001101110011011011011000111001101100011011&amp;quot;, \n &amp;quot;10000100110111000001110110010000000000111100101101&amp;quot;, \n &amp;quot;01010011101101101110000011000110011111001111011100&amp;quot;, \n &amp;quot;01101010011111010000011001111101011010011100001101&amp;quot;, \n &amp;quot;11011000011000110010101111100000101011011111101100&amp;quot;, \n &amp;quot;11100001001000110010100011001010101101001010001100&amp;quot;, \n &amp;quot;11011011001100111101001100111100000101011101101011&amp;quot;, \n &amp;quot;11110111100100101011100101111101000111001111110111&amp;quot;, \n &amp;quot;00011001100110111100111100001100101001111100001111&amp;quot;, \n &amp;quot;10001111100101110111001111100000000011110000100111&amp;quot;, \n &amp;quot;10101010110110100110010001001010000111100110100011&amp;quot;, \n &amp;quot;01100110100000001110101001101011001010001101110101&amp;quot;, \n &amp;quot;10110101110100110110101001100111110000101111100110&amp;quot;, \n &amp;quot;01011000001001101110100001101001110011001001110001&amp;quot;, \n &amp;quot;00100101010001100110110101001010010100001011000011&amp;quot;, \n &amp;quot;00011101100100001010100000000011000010100110011100&amp;quot;, \n &amp;quot;11001001011000000101111111000000110010001101101110&amp;quot;, \n &amp;quot;10101010110110010000010011001100110101110100111011&amp;quot;, \n &amp;quot;01101001010111010001101000100011101001110101000110&amp;quot;, \n &amp;quot;00110101101110110001110101110010100100110000101101&amp;quot;, \n &amp;quot;11010101000111010011110011000001101111010011110011&amp;quot;, \n &amp;quot;10010000010001110011011101001110110010001100011100&amp;quot;, \n &amp;quot;00111101110001001100101001110100110010100110110000&amp;quot;, \n &amp;quot;00010011011000101000100001101110111100100000010100&amp;quot;, \n &amp;quot;01101110001101000001001000001011101010011101011110&amp;quot;, \n &amp;quot;00000100110011001011101011110011011101100001110111&amp;quot;, \n &amp;quot;00110011110000011001011100001110101010100110010110&amp;quot;, \n &amp;quot;00111001010011011111010100000100100000101101110001&amp;quot;, \n &amp;quot;10101101101110111110000011111011001011100011110001&amp;quot;, \n &amp;quot;00101110010101111000001010110100001110111011100011&amp;quot;, \n &amp;quot;01111110010100111010110001111000111101110100111011&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 12&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2003, TopCoder, Inc.  All rights reserved.  &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>\n  </void>\n  <void property\="methodName">\n   <string>MaxArea</string>\n  </void>\n  <void property\="parameterNames">\n   <void method\="add">\n    <string>board</string>\n   </void>\n  </void>\n  <void property\="parameterTypes">\n   <void method\="add">\n    <class>[Ljava.lang.String;</class>\n   </void>\n  </void>\n  <void property\="returnType">\n   <class>java.lang.Integer</class>\n  </void>\n  <void property\="testCases">\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase0">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase0"/>\n       <array class\="java.lang.Object" length\="1">\n        <void index\="0">\n         <array class\="java.lang.String" length\="2">\n          <void index\="0">\n           <string>1</string>\n          </void>\n          <void index\="1">\n           <string>0</string>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase0"/>\n       <int>2</int>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase1">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase1"/>\n       <array class\="java.lang.Object" length\="1">\n        <void index\="0">\n         <array class\="java.lang.String" length\="1">\n          <void index\="0">\n           <string>0000</string>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase1"/>\n       <int>1</int>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase2">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase2"/>\n       <array class\="java.lang.Object" length\="1">\n        <void index\="0">\n         <array class\="java.lang.String" length\="1">\n          <void index\="0">\n           <string>01</string>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase2"/>\n       <int>2</int>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase3">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase3"/>\n       <array class\="java.lang.Object" length\="1">\n        <void index\="0">\n         <array class\="java.lang.String" length\="3">\n          <void index\="0">\n           <string>001</string>\n          </void>\n          <void index\="1">\n           <string>000</string>\n          </void>\n          <void index\="2">\n           <string>100</string>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase3"/>\n       <int>2</int>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase4">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase4"/>\n       <array class\="java.lang.Object" length\="1">\n        <void index\="0">\n         <array class\="java.lang.String" length\="1">\n          <void index\="0">\n           <string>0</string>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase4"/>\n       <int>1</int>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase5">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase5"/>\n       <array class\="java.lang.Object" length\="1">\n        <void index\="0">\n         <array class\="java.lang.String" length\="2">\n          <void index\="0">\n           <string>101</string>\n          </void>\n          <void index\="1">\n           <string>010</string>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase5"/>\n       <int>6</int>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase6">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase6"/>\n       <array class\="java.lang.Object" length\="1">\n        <void index\="0">\n         <array class\="java.lang.String" length\="4">\n          <void index\="0">\n           <string>101</string>\n          </void>\n          <void index\="1">\n           <string>011</string>\n          </void>\n          <void index\="2">\n           <string>101</string>\n          </void>\n          <void index\="3">\n           <string>010</string>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase6"/>\n       <int>8</int>\n      </void>\n     </void>\n    </object>\n   </void>\n   <void method\="add">\n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" id\="ProblemStatement$TestCase7">\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>parameters</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase7"/>\n       <array class\="java.lang.Object" length\="1">\n        <void index\="0">\n         <array class\="java.lang.String" length\="47">\n          <void index\="0">\n           <string>11001110011000110001111001001110110011010110001011</string>\n          </void>\n          <void index\="1">\n           <string>10100100010111111011111001011110101111010011100001</string>\n          </void>\n          <void index\="2">\n           <string>11101111001110100110010101101100011100101000010001</string>\n          </void>\n          <void index\="3">\n           <string>01000010001010101100010011111000100100110111111000</string>\n          </void>\n          <void index\="4">\n           <string>10110100000101100000111000100001011101111101010010</string>\n          </void>\n          <void index\="5">\n           <string>00111010000011100001110110010011010110010011100100</string>\n          </void>\n          <void index\="6">\n           <string>01100001111101001101001101100001111000111001101010</string>\n          </void>\n          <void index\="7">\n           <string>11010000000011011010100010000000111011001001100101</string>\n          </void>\n          <void index\="8">\n           <string>10100000000100010100100011010100110110110001000001</string>\n          </void>\n          <void index\="9">\n           <string>01101010101100001100000110100110100000010100100010</string>\n          </void>\n          <void index\="10">\n           <string>11010000001110111111011010011110001101100011100010</string>\n          </void>\n          <void index\="11">\n           <string>11101111000000011010011100100001100011111111110111</string>\n          </void>\n          <void index\="12">\n           <string>11000001101100100011000110111010011001010100000001</string>\n          </void>\n          <void index\="13">\n           <string>00100001111001010000101101100010000001100100001000</string>\n          </void>\n          <void index\="14">\n           <string>01001110110111101011010000111111101011000110010111</string>\n          </void>\n          <void index\="15">\n           <string>01001010000111111001100000100010101100100101010100</string>\n          </void>\n          <void index\="16">\n           <string>11111101001101110011011011011000111001101100011011</string>\n          </void>\n          <void index\="17">\n           <string>10000100110111000001110110010000000000111100101101</string>\n          </void>\n          <void index\="18">\n           <string>01010011101101101110000011000110011111001111011100</string>\n          </void>\n          <void index\="19">\n           <string>01101010011111010000011001111101011010011100001101</string>\n          </void>\n          <void index\="20">\n           <string>11011000011000110010101111100000101011011111101100</string>\n          </void>\n          <void index\="21">\n           <string>11100001001000110010100011001010101101001010001100</string>\n          </void>\n          <void index\="22">\n           <string>11011011001100111101001100111100000101011101101011</string>\n          </void>\n          <void index\="23">\n           <string>11110111100100101011100101111101000111001111110111</string>\n          </void>\n          <void index\="24">\n           <string>00011001100110111100111100001100101001111100001111</string>\n          </void>\n          <void index\="25">\n           <string>10001111100101110111001111100000000011110000100111</string>\n          </void>\n          <void index\="26">\n           <string>10101010110110100110010001001010000111100110100011</string>\n          </void>\n          <void index\="27">\n           <string>01100110100000001110101001101011001010001101110101</string>\n          </void>\n          <void index\="28">\n           <string>10110101110100110110101001100111110000101111100110</string>\n          </void>\n          <void index\="29">\n           <string>01011000001001101110100001101001110011001001110001</string>\n          </void>\n          <void index\="30">\n           <string>00100101010001100110110101001010010100001011000011</string>\n          </void>\n          <void index\="31">\n           <string>00011101100100001010100000000011000010100110011100</string>\n          </void>\n          <void index\="32">\n           <string>11001001011000000101111111000000110010001101101110</string>\n          </void>\n          <void index\="33">\n           <string>10101010110110010000010011001100110101110100111011</string>\n          </void>\n          <void index\="34">\n           <string>01101001010111010001101000100011101001110101000110</string>\n          </void>\n          <void index\="35">\n           <string>00110101101110110001110101110010100100110000101101</string>\n          </void>\n          <void index\="36">\n           <string>11010101000111010011110011000001101111010011110011</string>\n          </void>\n          <void index\="37">\n           <string>10010000010001110011011101001110110010001100011100</string>\n          </void>\n          <void index\="38">\n           <string>00111101110001001100101001110100110010100110110000</string>\n          </void>\n          <void index\="39">\n           <string>00010011011000101000100001101110111100100000010100</string>\n          </void>\n          <void index\="40">\n           <string>01101110001101000001001000001011101010011101011110</string>\n          </void>\n          <void index\="41">\n           <string>00000100110011001011101011110011011101100001110111</string>\n          </void>\n          <void index\="42">\n           <string>00110011110000011001011100001110101010100110010110</string>\n          </void>\n          <void index\="43">\n           <string>00111001010011011111010100000100100000101101110001</string>\n          </void>\n          <void index\="44">\n           <string>10101101101110111110000011111011001011100011110001</string>\n          </void>\n          <void index\="45">\n           <string>00101110010101111000001010110100001110111011100011</string>\n          </void>\n          <void index\="46">\n           <string>01111110010100111010110001111000111101110100111011</string>\n          </void>\n         </array>\n        </void>\n       </array>\n      </void>\n     </void>\n     <void class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase" method\="getField">\n      <string>returnValue</string>\n      <void method\="set">\n       <object idref\="ProblemStatement$TestCase7"/>\n       <int>12</int>\n      </void>\n     </void>\n    </object>\n   </void>\n  </void>\n </object>\n</java>\n
